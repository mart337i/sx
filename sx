#!/bin/bash

# sx - Interactive SSH connection selector
set -euo pipefail

VERSION="1.0.0"
CONFIG_DIR="${HOME}/.config/sx"
SERVERS_FILE="${CONFIG_DIR}/servers"

# Colors
BLUE='\033[0;34m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
BOLD='\033[1m'
NC='\033[0m'

# Setup config directory
[[ ! -d "${CONFIG_DIR}" ]] && mkdir -p "${CONFIG_DIR}"
[[ ! -f "${SERVERS_FILE}" ]] && touch "${SERVERS_FILE}"

# Check dependencies
check_deps() {
    command -v fzf >/dev/null || { echo -e "${RED}Error:${NC} fzf is required. Install with: apt install fzf"; exit 1; }
    command -v ssh >/dev/null || { echo -e "${RED}Error:${NC} ssh is required"; exit 1; }
}

# Interactive server selection
select_server() {
    local query="${1:-}"
    
    [[ ! -s "${SERVERS_FILE}" ]] && { echo -e "${YELLOW}No servers found.${NC} Use: sx --import file.xml"; exit 1; }
    
    local servers
    if [[ -n "${query}" ]]; then
        servers=$(awk -F'|' -v q="${query}" 'tolower($0) ~ tolower(q) {print $1 " (" $2 ")|" $3 "|" $4 "|" $5}' "${SERVERS_FILE}")
        [[ -z "${servers}" ]] && { echo -e "${YELLOW}No servers match:${NC} ${query}"; exit 1; }
        
        local count=$(echo "${servers}" | wc -l)
        if [[ ${count} -eq 1 ]]; then
            local host=$(echo "${servers}" | cut -d'|' -f2)
            local user=$(echo "${servers}" | cut -d'|' -f3)
            connect_server "${host}" "${user}"
            return
        fi
    else
        servers=$(awk -F'|' '{print $1 " (" $2 ")|" $3 "|" $4 "|" $5}' "${SERVERS_FILE}")
    fi
    
    local selected=$(echo "${servers}" | fzf --prompt="SSH> " --height=60% --layout=reverse --preview='echo {} | awk -F"|" "{print \"Host: \" \$2 \"\nUser: \" \$3 \"\nPort: \" \$4}"' --preview-window=right:30% --preview-label="Server Info")
    if [[ -n "${selected}" ]]; then
        local host=$(echo "${selected}" | cut -d'|' -f2)
        local user=$(echo "${selected}" | cut -d'|' -f3)
        connect_server "${host}" "${user}"
    fi
}

# Connect to server
connect_server() {
    local target_host="$1"
    local target_user="$2"
    
    local line=$(awk -F'|' -v h="${target_host}" -v u="${target_user}" '$3 == h && $4 == u {print; exit}' "${SERVERS_FILE}")
    [[ -z "${line}" ]] && { echo -e "${RED}Server not found:${NC} ${target_user}@${target_host}"; exit 1; }
    
    IFS='|' read -r name _ host user port <<< "${line}"
    
    local cmd="ssh"
    [[ "${port}" != "22" ]] && cmd="${cmd} -p ${port}"
    cmd="${cmd} ${user}@${host}"
    
    echo -e "${BLUE}Connecting to${NC} ${BOLD}${name}${NC} ${BLUE}(${user}@${host})${NC}..."
    exec ${cmd}
}

# Import FileZilla XML
import_filezilla() {
    local xml="$1"
    [[ ! -f "${xml}" ]] && { echo -e "${RED}File not found:${NC} ${xml}"; exit 1; }
    
    awk '/<Server>/ { server=""; host=""; user=""; port=""; name=""; in_server=1 }
         in_server && /<Host>/ { gsub(/.*<Host>/, ""); gsub(/<\/Host>.*/, ""); host=$0 }
         in_server && /<User>/ { gsub(/.*<User>/, ""); gsub(/<\/User>.*/, ""); user=$0 }
         in_server && /<Port>/ { gsub(/.*<Port>/, ""); gsub(/<\/Port>.*/, ""); port=$0 }
         in_server && /<Name>/ { gsub(/.*<Name>/, ""); gsub(/<\/Name>.*/, ""); name=$0 }
         /<\/Server>/ { 
             if (host && (port=="" && (port="22")) && (user=="" && (user="root")) && (name=="" && (name=host)))
                 print name "|" user "@" host ":" port "|" host "|" user "|" port
             in_server=0 
         }' "${xml}" | sort -u >> "${SERVERS_FILE}"
    
    echo -e "${GREEN}Imported${NC} $(wc -l < "${SERVERS_FILE}") servers"
}

# Import SSH config file
import_ssh_config() {
    local config="${1:-~/.ssh/config}"
    # Expand tilde
    config="${config/#\~/$HOME}"
    [[ ! -f "${config}" ]] && { echo -e "${RED}File not found:${NC} ${config}"; exit 1; }
    
    awk '/^Host / && !/\*/ { 
        if (host && hostname) {
            if (!user) user="root"
            if (!port) port="22"
            print host "|" user "@" hostname ":" port "|" hostname "|" user "|" port
        }
        host=$2; hostname=""; user=""; port=""
    }
    /^[[:space:]]*HostName/ { hostname=$2 }
    /^[[:space:]]*User/ { user=$2 }  
    /^[[:space:]]*Port/ { port=$2 }
    END {
        if (host && hostname) {
            if (!user) user="root"
            if (!port) port="22"
            print host "|" user "@" hostname ":" port "|" hostname "|" user "|" port
        }
    }' "${config}" | sort -u >> "${SERVERS_FILE}"
    
    echo -e "${GREEN}Imported${NC} $(wc -l < "${SERVERS_FILE}") servers"
}

# Add server
add_server() {
    local name="$1" host="$2" user="${3:-root}" port="${4:-22}"
    echo "${name}|${user}@${host}:${port}|${host}|${user}|${port}" >> "${SERVERS_FILE}"
    echo -e "${GREEN}Added:${NC} ${name}"
}

# Remove server
remove_server() {
    local name="$1"
    [[ -z "${name}" ]] && {     echo -e "${RED}Error:${NC} Server name required"; exit 1; }
    
    if ! grep -q "^${name}|" "${SERVERS_FILE}" 2>/dev/null; then
        echo -e "${RED}Server not found:${NC} ${name}"
        exit 1
    fi
    
    grep -v "^${name}|" "${SERVERS_FILE}" > "${SERVERS_FILE}.tmp" && mv "${SERVERS_FILE}.tmp" "${SERVERS_FILE}"
    echo -e "${GREEN}Removed:${NC} ${name}"
}

# List servers
list_servers() {
    [[ ! -s "${SERVERS_FILE}" ]] && { echo -e "${YELLOW}No servers configured${NC}"; exit 1; }
    awk -F'|' '{printf "%-20s %s\n", $1, $2}' "${SERVERS_FILE}"
}

# Show help
show_help() {
    echo -e "${BOLD}${BLUE}sx${NC} - SSH connection selector"
    echo ""

    echo -e "${BOLD}USAGE:${NC}"
    echo "    sx [search]             # Interactive selection (with optional search)"
    echo "    sx --import FILE        # Import FileZilla XML"
    echo "    sx --ssh-config [FILE]  # Import SSH config (default: ~/.ssh/config)"
    echo "    sx --add NAME HOST [USER] [PORT]  # Add server"
    echo "    sx --remove NAME        # Remove server"
    echo "    sx --list              # List servers"
    echo "    sx --help              # Show help"
    echo "    sx --version           # Show version"
    echo ""
    echo -e "${BOLD}EXAMPLES:${NC}"
    echo "    sx                     # Show all servers"
    echo "    sx prod                # Filter for \"prod\" servers"
    echo "    sx --import sites.xml  # Import from FileZilla"
    echo "    sx --ssh-config        # Import from ~/.ssh/config"
    echo "    sx --add web 1.2.3.4 admin 22"
    echo "    sx --remove web        # Remove server"
    echo ""
    echo -e "${BOLD}HOTKEY:${NC}"
    echo "    Ctrl+K opens sx (after running: source ~/.config/sx/sx-integration.sh)"
    echo ""
}

# Main
check_deps

case "${1:-}" in
    --help|-h) show_help ;;
    --version|-v) echo "sx ${VERSION}" ;;
    --import|-i) import_filezilla "$2" ;;
    --ssh-config) import_ssh_config "${2:-}" ;;
    --add|-a) add_server "$2" "$3" "${4:-root}" "${5:-22}" ;;
    --remove|-r) remove_server "${2:-}" ;;
    --list|-l) list_servers ;;
    -*) echo -e "${RED}Unknown option:${NC} $1. Use --help for usage."; exit 1 ;;
    *) select_server "$*" ;;
esac