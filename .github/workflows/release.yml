name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-deb:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Install build dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y dpkg-dev debhelper
    
    - name: Extract version from tag
      id: version
      run: |
        if [[ "${{ github.ref }}" == refs/tags/* ]]; then
          VERSION=${GITHUB_REF#refs/tags/v}
        else
          VERSION="1.0.1"
        fi
        echo "version=${VERSION}" >> $GITHUB_OUTPUT
        echo "Building version: ${VERSION}"
    
    - name: Build .deb package
      run: ./build-deb.sh
    
    - name: List build artifacts
      run: ls -lh build/
    
    - name: Test package
      run: |
        dpkg-deb -I build/*.deb
        dpkg-deb -c build/*.deb
    
    - name: Upload .deb artifact
      uses: actions/upload-artifact@v4
      with:
        name: sx-deb-package
        path: build/*.deb
    
    - name: Upload .deb to release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: build/*.deb
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
  build-rpm:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Install RPM build tools
      run: |
        sudo apt-get update
        sudo apt-get install -y rpm
    
    - name: Extract version from tag
      id: version
      run: |
        if [[ "${{ github.ref }}" == refs/tags/* ]]; then
          VERSION=${GITHUB_REF#refs/tags/v}
        else
          VERSION="1.0.1"
        fi
        echo "version=${VERSION}" >> $GITHUB_OUTPUT
        echo "Building version: ${VERSION}"
    
    - name: Build .rpm package
      run: ./build-rpm.sh
    
    - name: List build artifacts
      run: ls -lh build/ || ls -lh ~/rpmbuild/RPMS/noarch/
    
    - name: Copy RPM to build directory
      run: |
        mkdir -p build
        cp ~/rpmbuild/RPMS/noarch/*.rpm build/ || true
        cp ~/rpmbuild/SRPMS/*.rpm build/ || true
    
    - name: Test package
      run: |
        rpm -qip build/*.noarch.rpm || true
        rpm -qlp build/*.noarch.rpm || true
    
    - name: Upload .rpm artifact
      uses: actions/upload-artifact@v4
      with:
        name: sx-rpm-package
        path: build/*.rpm
    
    - name: Upload .rpm to release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: build/*.rpm
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
  create-release:
    needs: [build-deb, build-rpm]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Extract version from tag
      id: version
      run: |
        VERSION=${GITHUB_REF#refs/tags/v}
        echo "version=${VERSION}" >> $GITHUB_OUTPUT
    
    - name: Download all artifacts
      uses: actions/download-artifact@v4
    
    - name: Create Release with installation instructions
      uses: softprops/action-gh-release@v1
      with:
        body: |
          ## Installation
          
          ### Ubuntu/Debian
          ```bash
          wget https://github.com/mart337i/sx/releases/download/${{ github.ref_name }}/sx_${{ steps.version.outputs.version }}-1_all.deb
          sudo dpkg -i sx_${{ steps.version.outputs.version }}-1_all.deb
          sudo apt-get install -f
          ```
          
          ### Fedora/RHEL/Rocky/Alma
          ```bash
          wget https://github.com/mart337i/sx/releases/download/${{ github.ref_name }}/sx-${{ steps.version.outputs.version }}-1.fc*.noarch.rpm
          sudo dnf install sx-${{ steps.version.outputs.version }}-1.fc*.noarch.rpm
          ```
          
          ### openSUSE
          ```bash
          wget https://github.com/mart337i/sx/releases/download/${{ github.ref_name }}/sx-${{ steps.version.outputs.version }}-1.*.noarch.rpm
          sudo zypper install sx-${{ steps.version.outputs.version }}-1.*.noarch.rpm
          ```
          
          ### Arch Linux
          ```bash
          # Install from AUR
          yay -S sx
          # or
          paru -S sx
          ```
          
          ### From source
          ```bash
          git clone https://github.com/mart337i/sx.git
          cd sx
          ./install.sh
          ```
          
          ## What's Changed
          See [CHANGELOG](https://github.com/mart337i/sx/blob/main/debian/changelog) for details.
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
